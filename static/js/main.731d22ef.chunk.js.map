{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/contacts/contacts-slice.js","redux/store.js","redux/auth/auth-selectors.js","components/PrivateRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.jsx","components/AuthNavigation/AuthNavigation.styled.js","components/AuthNavigation/AuthNavigation.jsx","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.styled.js","components/AppBar/AppBar.jsx","components/LoaderElement/LoaderElement.styled.js","components/LoaderElement/LoaderElement.jsx","components/App/App.styled.js","images/bg-hd.jpg","images/bg-hd-dark.jpg","components/App/App.jsx","reportWebVitals.js","index.js","redux/auth/auth-operations.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js"],"names":["filteredReducer","createReducer","actions","_","payload","authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isLoading","isFetchingCurrentUser","error","extraReducers","authOperations","fulfilled","state","action","pending","rejected","message","contactsSlice","contact","number","allContacts","contactsOperations","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","blacklist","store","configureStore","reducer","contacts","auth","persistReducer","filtered","devTools","process","persistStore","getIsLoggedIn","getIsFetchingCurrent","getUserName","PrivateRoute","children","privateRouteProps","useSelector","authSelectors","to","PublicRoute","restricted","redirectTo","publicRouteProps","shouldRedirect","exact","LinkContainer","styled","div","Navigation","Button","size","variant","sx","mr","mt","style","marginLeft","AuthNavigation","ml","minWidth","Container","Title","h2","Accent","span","UserMenu","dispatch","useDispatch","CssBaseline","type","onClick","Header","header","AppBar","theme","Box","component","Paper","IconButton","palette","mode","LoaderWrapper","LoaderElement","color","height","width","MainWrapper","HomeView","lazy","ContactsView","SignUpView","LoginView","App","useState","darkTheme","setDarkTheme","useEffect","useMemo","createTheme","background","default","paper","primary","main","secondary","ThemeProvider","position","document","body","backgroundImage","bgImage","bgImageDark","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","axios","defaults","baseURL","headers","common","Authorization","signup","createAsyncThunk","credentials","thunkAPI","a","post","data","toast","success","rejectWithValue","logIn","logOut","loading","duration","icon","fetchCurrentUser","getState","persistedToken","get","getAllContacts","createContact","deleteContact","delete","patch","id","changeFilter","createAction"],"mappings":"6PAIaA,EAAkBC,YADH,GACgB,eACzCC,KAAuB,SAACC,EAAD,YAAMC,Y,iCCOnBC,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAXmB,CACnBC,KAAM,CAAEF,KAAM,KAAMG,MAAO,MAC3BC,MAAO,KACPC,YAAY,EACZC,WAAW,EACXC,uBAAuB,EACvBC,MAAO,IAMPC,eAAa,mBAEVC,IAAsBC,WAFZ,SAEuBC,EAAOC,GACvCD,EAAMV,KAAOW,EAAOhB,QAAQK,KAC5BU,EAAMR,MAAQS,EAAOhB,QAAQO,MAC7BQ,EAAMP,YAAa,EACnBO,EAAMN,WAAY,KANT,cAQVI,IAAsBI,SARZ,SAQqBF,EAAOC,GACrCD,EAAMP,YAAa,EACnBO,EAAMN,WAAY,EAClBM,EAAMJ,MAAQ,MAXL,cAaVE,IAAsBK,UAbZ,SAasBH,EAAOC,GACtCD,EAAMP,YAAa,EACnBO,EAAMN,WAAY,EAClBM,EAAMJ,MAAQK,EAAOhB,QAAQmB,WAhBpB,cAmBVN,IAAqBC,WAnBX,SAmBsBC,EAAOC,GACtCD,EAAMV,KAAOW,EAAOhB,QAAQK,KAC5BU,EAAMR,MAAQS,EAAOhB,QAAQO,MAC7BQ,EAAMP,YAAa,EACnBO,EAAMN,WAAY,KAvBT,cAyBVI,IAAqBI,SAzBX,SAyBoBF,EAAOC,GACpCD,EAAMP,YAAa,EACnBO,EAAMN,WAAY,EAClBM,EAAMJ,MAAQ,MA5BL,cA8BVE,IAAqBK,UA9BX,SA8BqBH,EAAOC,GACrCD,EAAMP,YAAa,EACnBO,EAAMN,WAAY,EAClBM,EAAMJ,MAAQK,EAAOhB,QAAQmB,WAjCpB,cAoCVN,IAAsBC,WApCZ,SAoCuBC,EAAOhB,GACvCgB,EAAMV,KAAO,CAAEF,KAAM,KAAMG,MAAO,MAClCS,EAAMR,MAAQ,KACdQ,EAAMP,YAAa,KAvCV,cAyCVK,IAAsBI,SAzCZ,SAyCqBF,EAAOC,GACrCD,EAAMP,YAAa,EACnBO,EAAMN,WAAY,EAClBM,EAAMJ,MAAQ,MA5CL,cA8CVE,IAAsBK,UA9CZ,SA8CsBH,EAAOC,GACtCD,EAAMP,YAAa,EACnBO,EAAMN,WAAY,EAClBM,EAAMJ,MAAQK,EAAOhB,QAAQmB,WAjDpB,cAoDVN,IAAgCC,WApDtB,SAoDiCC,EAAOC,GACjDD,EAAMV,KAAOW,EAAOhB,QACpBe,EAAMP,YAAa,EACnBO,EAAML,uBAAwB,KAvDrB,cAyDVG,IAAgCI,SAzDtB,SAyD+BF,EAAOhB,GAC/CgB,EAAML,uBAAwB,EAC9BK,EAAMP,YAAa,EACnBO,EAAMN,WAAY,EAClBM,EAAMJ,MAAQ,MA7DL,cA+DVE,IAAgCK,UA/DtB,SA+DgCH,EAAOC,GAChDD,EAAML,uBAAwB,EAC9BK,EAAMP,YAAa,EACnBO,EAAMN,WAAY,KAlET,K,QCLFW,EAAgBlB,YAAY,CACvCC,KAAM,WACNC,aATmB,CACnBiB,QAAS,CAAElB,KAAM,KAAMmB,OAAQ,MAC/BC,YAAa,GACbhB,MAAO,KACPE,WAAW,GAMXG,eAAa,mBACVY,IAAkCP,SADxB,SACiCF,EAAOhB,GACjDgB,EAAMN,WAAY,KAFT,cAIVe,IAAkCV,WAJxB,SAImCC,EAAOC,GACnDD,EAAMQ,YAAcP,EAAOhB,QAC3Be,EAAMR,MAAQS,EAAOhB,QAAQO,MAC7BQ,EAAMN,WAAY,KAPT,cASVe,IAAiCV,WATvB,SASkCC,EAAOC,GAClDD,EAAMM,QAAUL,EAAOhB,QACvBe,EAAMR,MAAQS,EAAOhB,QAAQO,SAXpB,cAaViB,IAAiCV,WAbvB,SAakCC,EAAOC,GAClDD,EAAMM,QAAUL,EAAOhB,QACvBe,EAAMR,MAAQS,EAAOhB,QAAQO,SAfpB,KCGTkB,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,SACZC,UAAW,CAAC,aAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUvB,EAAcsB,QACxBE,KAAMC,YAAeV,EAAmBlC,EAAUyC,SAClDI,SAAUlD,GAEZ6B,WAAYA,EACZsB,UAAUC,I,GAGaC,YAAaT,G,wBCxCzBU,EAAgB,SAAAnC,GAAK,OAAIA,EAAM6B,KAAKpC,YAEpC2C,EAAuB,SAAApC,GAAK,OAAIA,EAAM6B,KAAKlC,uBAC3C0C,EAAc,SAAArC,GAAK,OAAIA,EAAM6B,KAAKvC,KAAKF,M,8CCArC,SAASkD,EAAT,GAA2D,IAAnCC,EAAkC,EAAlCA,SAAaC,EAAqB,iBACjE/C,EAAagD,YAAYC,GAC/B,OACE,cAAC,IAAD,2BAAWF,GAAX,aACG/C,EAAa8C,EAAW,cAAC,IAAD,CAAUI,GAAG,c,6CCJ7B,SAASC,EAAT,GAKX,IAAD,IAJDC,kBAIC,SAHDC,EAGC,EAHDA,WACAP,EAEC,EAFDA,SACGQ,EACF,iBAGKC,EAFaP,YAAYC,IAEMG,EACrC,OACE,cAAC,IAAD,2BAAWE,GAAX,aACGC,EAAiB,cAAC,IAAD,CAAUC,OAAK,EAACN,GAAIG,IAAiBP,K,oCCbhDW,EAAgBC,IAAOC,IAAV,iH,iBCObC,EAAa,WACxB,IAAM5D,EAAagD,YAAYC,GAE/B,OACE,eAACQ,EAAD,WACE,cAAC,IAAD,CAASD,OAAK,EAACN,GAAG,IAAlB,SACE,cAACW,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,WAAWC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAzD,oBAKDlE,EACC,cAAC,IAAD,CAASwD,OAAK,EAACN,GAAG,YAAlB,SACE,cAACW,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,WAAWC,GAAI,CAAEE,GAAI,GAAlD,wBAKF,cAAC,IAAD,CAASV,OAAK,EAACN,GAAG,YAAlB,SACE,eAACW,EAAA,EAAD,CAAQC,KAAK,QAAQE,GAAI,CAAEE,GAAI,GAA/B,qBAEE,cAAC,IAAD,CAAQC,MAAO,CAAEC,WAAY,cC5B5BX,EAAgBC,IAAOC,IAAV,iHCGbU,EAAiB,WAC5B,OACE,eAAC,EAAD,WACE,cAAC,IAAD,CAASnB,GAAG,SAAZ,SACE,cAACW,EAAA,EAAD,CACEC,KAAK,QACLC,QAAQ,WACRC,GAAI,CAAEM,GAAI,EAAGJ,GAAI,EAAGK,SAAU,IAHhC,sBASF,cAAC,IAAD,CAASrB,GAAG,UAAZ,SACE,cAACW,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,WAAWC,GAAI,CAAEM,GAAI,EAAGJ,GAAI,GAAzD,2BCjBKM,GAAYd,IAAOC,IAAV,iKAQTc,GAAQf,IAAOgB,GAAV,wJAQLC,GAASjB,IAAOkB,KAAV,qE,UCVNC,GAAW,WACtB,IAAMC,EAAWC,cACXpF,EAAOqD,YAAYC,GAEzB,OACE,cAAC+B,GAAA,EAAD,UACE,eAACR,GAAD,WACE,eAACC,GAAD,sBACU,cAACE,GAAD,UAAShF,OAEnB,cAACkE,EAAA,EAAD,CACEG,GAAI,CAAEM,GAAI,EAAGJ,GAAI,GACjBJ,KAAK,QACLC,QAAQ,YACRkB,KAAK,SACLC,QAAS,kBAAMJ,EAASzE,QAL1B,2BChBK8E,GAASzB,IAAO0B,OAAV,+I,wECYNC,GAAS,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,QAASI,EAAY,EAAZA,MAC1BtF,EAAagD,YAAYC,GAE/B,OACE,cAAC+B,GAAA,EAAD,UACE,cAACO,GAAA,EAAD,CAAKC,UAAWC,KAAhB,SACE,eAACN,GAAD,WACE,cAAC,EAAD,IACA,cAACO,GAAA,EAAD,CAAYR,QAASA,EAArB,SAC0B,SAAvBI,EAAMK,QAAQC,KACb,cAAC,KAAD,IAEA,cAAC,KAAD,MAGF5F,EAAkC,cAAC,GAAD,IAArB,cAAC,EAAD,Y,8BC3BZ6F,GAAgBnC,IAAOC,IAAV,wGCSXmC,GARO,WACpB,OACE,cAACD,GAAD,UACE,cAAC,KAAD,CAAQZ,KAAK,WAAWc,MAAO,UAAWC,OAAQ,GAAIC,MAAO,QCJtDC,GAAcxC,IAAOC,IAAV,qECFT,OAA0B,kCCA1B,OAA0B,uC,oBCiBnCwC,GAAWC,gBAAK,kBACpB,iCAEIC,GAAeD,gBAAK,kBACxB,8DAIIE,GAAaF,gBAAK,kBACtB,uDAIIG,GAAYH,gBAAK,kBACrB,uDAmFaI,GA7EH,WACV,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACM7B,EAAWC,cACX7E,EAAwB8C,YAAYC,GAG1C2D,qBAAU,WACR9B,EAASzE,SACR,CAACyE,IAGJ,IAAMQ,EAAQuB,mBACZ,kBACEC,aAAY,CACVnB,QAAS,CACPC,KAAMc,EAAY,OAAS,QAC3BK,WAAY,CACVC,QAAS,UACTC,MAAOP,EAAY,YAAc,QAEnCQ,QAAS,CACPC,KAAMT,EAAY,UAAY,WAEhCU,UAAW,CACTD,KAAM,kBAId,CAACT,IAaH,OACE,cAACR,GAAD,WACIhG,GACA,eAACmH,GAAA,EAAD,CAAe/B,MAAOA,EAAtB,UACE,cAAC,KAAD,CAASgC,SAAS,kBAClB,cAAC,GAAD,CAAQpC,QAfU,WACxB,GAAIwB,EAGF,OAFAC,GAAa,QACbY,SAASC,KAAKrD,MAAMsD,gBAApB,cAA6CC,GAA7C,MAGFf,GAAa,GACbY,SAASC,KAAKrD,MAAMsD,gBAApB,cAA6CE,GAA7C,MAQ0CrC,MAAOA,IAE3C,cAAC,IAAD,UACE,eAAC,WAAD,CACEsC,SACE,cAAC,GAAD,CAAe3C,KAAK,WAAWe,OAAQ,GAAIC,MAAO,KAFtD,UAKE,cAAC9C,EAAD,CAAaK,OAAK,EAACqE,KAAK,IAAxB,SACE,cAAC1B,GAAD,MAGF,cAAChD,EAAD,CAAa0E,KAAK,UAAUzE,YAAU,EAACC,WAAY,YAAnD,SACE,cAACiD,GAAD,MAGF,cAACnD,EAAD,CAAa0E,KAAK,SAASzE,YAAU,EAACC,WAAY,YAAlD,SACE,cAACkD,GAAD,MAGF,cAAC1D,EAAD,CAAcgF,KAAK,YAAnB,SACE,cAACxB,GAAD,iBC5FDyB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUzG,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINuF,SAASmB,eAAe,SAG1BZ,M,qPCjBAa,IAAMC,SAASC,QAAU,yCAEzB,IAAM9I,EAAQ,SACRA,GACF4I,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDjJ,IAFtDA,EAAQ,WAKV4I,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IAIrCC,EAASC,YACpB,cADoC,uCAEpC,WAAOC,EAAaC,GAApB,iBAAAC,EAAA,+EAE2BV,IAAMW,KAAK,eAAgBH,GAFtD,uBAEYI,EAFZ,EAEYA,KACRxJ,EAAUwJ,EAAKxJ,OACfyJ,IAAMC,QAAN,+BAAsCF,EAAK1J,KAAKF,OAJpD,kBAMW4J,GANX,yCAQIC,IAAMrJ,MAAM,KAAMQ,SARtB,kBASWyI,EAASM,gBAAT,OATX,0DAFoC,yDAgBzBC,EAAQT,YACnB,aADmC,uCAEnC,WAAOC,EAAaC,GAApB,iBAAAC,EAAA,+EAE2BV,IAAMW,KAAK,cAAeH,GAFrD,uBAEYI,EAFZ,EAEYA,KACRxJ,EAAUwJ,EAAKxJ,OACfyJ,IAAMC,QAAN,yBAAgCF,EAAK1J,KAAKF,OAJ9C,kBAMW4J,GANX,yCAQIC,IAAMrJ,MAAM,KAAMQ,SARtB,kBAUWyI,EAASM,gBAAT,OAVX,0DAFmC,yDAiBxBE,EAASV,YACpB,cADoC,uCAEpC,WAAOC,EAAaC,GAApB,SAAAC,EAAA,+EAEUV,IAAMW,KAAK,eAAgBH,GAFrC,OAGIpJ,IACAyJ,IAAMK,QAAN,mBAAkC,CAAEC,SAAU,IAAMC,KAAM,cAAC,IAAD,MAJ9D,yEAMWX,EAASM,gBAAT,OANX,yDAFoC,yDAazBM,EAAmBd,YAC9B,wBAD8C,uCAE9C,WAAO3J,EAAG6J,GAAV,qBAAAC,EAAA,yDACQ9I,EAAQ6I,EAASa,WAEA,QADjBC,EAAiB3J,EAAM6B,KAAKrC,OAFpC,yCAIWqJ,EAASM,mBAJpB,cAME3J,EAAUmK,GANZ,kBAQ2BvB,IAAMwB,IAAI,iBARrC,uBAQYZ,EARZ,EAQYA,KARZ,kBASWA,GATX,2DAWWH,EAASM,gBAAT,OAXX,0DAF8C,0D,4LC3DhDf,IAAMC,SAASC,QAAU,wCAElB,IAAMuB,EAAiBlB,YAC5B,wBAD4C,uCAE5C,WAAMC,GAAN,iBAAAE,EAAA,+EAE2BV,IAAMwB,IAAI,YAAahB,GAFlD,uBAEYI,EAFZ,EAEYA,KAFZ,kBAIWA,GAJX,yFAF4C,uDAWjCc,EAAgBnB,YAC3B,0BAD2C,uCAE3C,WAAMC,GAAN,iBAAAE,EAAA,+EAE2BV,IAAMW,KAAK,YAAaH,GAFnD,uBAEYI,EAFZ,EAEYA,KAFZ,kBAIWA,GAJX,yFAF2C,uDAWhCe,EAAgBpB,YAC3B,0BAD2C,uCAE3C,WAAMC,GAAN,iBAAAE,EAAA,+EAE2BV,IAAM4B,OAAN,oBACRpB,GACbA,GAJN,uBAEYI,EAFZ,EAEYA,KAFZ,kBAOWA,GAPX,yFAF2C,uDAchBL,YAC3B,0BAD2C,uCAE3C,WAAMC,GAAN,SAAAE,EAAA,+EAEUV,IAAM6B,MAAN,oBAAyBrB,EAAYsB,IAAMtB,GAFrD,8GAF2C,wD,gCCzC7C,8CAEauB,EAAeC,YAAa,uB","file":"static/js/main.731d22ef.chunk.js","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst initinalFilterState = '';\nexport const filteredReducer = createReducer(initinalFilterState, {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n","import { createSlice } from '@reduxjs/toolkit';\nimport * as authOperations from './auth-operations.js';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isLoading: false,\n  isFetchingCurrentUser: false,\n  error: '',\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    //------------------ Signup\n    [authOperations.signup.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.isLoading = false;\n    },\n    [authOperations.signup.pending](state, action) {\n      state.isLoggedIn = false;\n      state.isLoading = true;\n      state.error = '';\n    },\n    [authOperations.signup.rejected](state, action) {\n      state.isLoggedIn = false;\n      state.isLoading = false;\n      state.error = action.payload.message;\n    },\n    //------------------ Login\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.isLoading = false;\n    },\n    [authOperations.logIn.pending](state, action) {\n      state.isLoggedIn = false;\n      state.isLoading = true;\n      state.error = '';\n    },\n    [authOperations.logIn.rejected](state, action) {\n      state.isLoggedIn = false;\n      state.isLoading = false;\n      state.error = action.payload.message;\n    },\n    //------------------ logout\n    [authOperations.logOut.fulfilled](state, _) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.logOut.pending](state, action) {\n      state.isLoggedIn = false;\n      state.isLoading = true;\n      state.error = '';\n    },\n    [authOperations.logOut.rejected](state, action) {\n      state.isLoggedIn = false;\n      state.isLoading = false;\n      state.error = action.payload.message;\n    },\n    //------------------ Fetch Current User\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state, _) {\n      state.isFetchingCurrentUser = true;\n      state.isLoggedIn = false;\n      state.isLoading = true;\n      state.error = '';\n    },\n    [authOperations.fetchCurrentUser.rejected](state, action) {\n      state.isFetchingCurrentUser = false;\n      state.isLoggedIn = false;\n      state.isLoading = false;\n    },\n  },\n});\n\n//-------------------------------RTK usage\n// export const authApi = createApi({\n//   reducerPath: 'authApi',\n//   baseQuery: fetchBaseQuery({\n//     baseUrl: 'https://connections-api.herokuapp.com/',\n//   }),\n//   tagTypes: ['users'],\n//   endpoints: builder => ({\n//     // Создание нового пользователя\n//     createUser: builder.mutation({\n//       query: newUser => ({\n//         url: `users/signup`,\n//         method: 'POST',\n//         body: newUser,\n//       }),\n//       invalidatesTags: ['users'],\n//     }),\n//     logInUser: builder.mutation({\n//       query: user => ({\n//         url: `users/signup`,\n//         method: 'POST',\n//         body: user,\n//       }),\n//       invalidatesTags: ['users'],\n//     }),\n//     logOutUser: builder.mutation({\n//       query: user => ({\n//         url: `users/signup`,\n//         method: 'POST',\n//         body: user,\n//         header: {\n//           Authorization: token,\n//         },\n//       }),\n//       invalidatesTags: ['users'],\n//     }),\n//     // Удаление контакта\n//     // deleteContact: builder.mutation({\n//     //   query: id => ({\n//     //     url: `/contacts/${id}`,\n//     //     method: 'DELETE',\n//     //   }),\n//     //   invalidatesTags: ['Contacts'],\n//     // }),\n//     // Фильтр по имени\n//     // getContactByName: builder.query({\n//     //   query: id => `/contacts/${id}`,\n//     // }),\n//   }),\n// });\n\n// export const { useCreateUserMutation, useCreateUserMutation } = authApi;\n","import { createSlice } from '@reduxjs/toolkit';\nimport * as contactsOperations from './contacts-operations.js';\n\nconst initialState = {\n  contact: { name: null, number: null },\n  allContacts: [],\n  token: null,\n  isLoading: false,\n};\n\nexport const contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  extraReducers: {\n    [contactsOperations.getAllContacts.pending](state, _) {\n      state.isLoading = true;\n    },\n    [contactsOperations.getAllContacts.fulfilled](state, action) {\n      state.allContacts = action.payload;\n      state.token = action.payload.token;\n      state.isLoading = false;\n    },\n    [contactsOperations.createContact.fulfilled](state, action) {\n      state.contact = action.payload;\n      state.token = action.payload.token;\n    },\n    [contactsOperations.deleteContact.fulfilled](state, action) {\n      state.contact = action.payload;\n      state.token = action.payload.token;\n    },\n  },\n});\n\n//---------------------RTK usage\n// import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// export const contactsApi = createApi({\n//   reducerPath: 'contactsApi',\n//   baseQuery: fetchBaseQuery({\n//     baseUrl: 'https://61708a5f23781c0017289a96.mockapi.io/api/v1/',\n//   }),\n//   tagTypes: ['Contacts'],\n//   endpoints: builder => ({\n//     //фетч всех контактов из DB\n//     getAllContacts: builder.query({\n//       //по умолчанию метод GET (method: 'GET')\n//       query: () => `/contacts`,\n//       providesTags: ['Contacts'],\n//     }),\n//     // Создание нового контакта\n//     createContact: builder.mutation({\n//       query: newContact => ({\n//         url: `/contacts`,\n//         method: 'POST',\n//         body: newContact,\n//       }),\n//       invalidatesTags: ['Contacts'],\n//     }),\n//     // Удаление контакта\n//     deleteContact: builder.mutation({\n//       query: id => ({\n//         url: `/contacts/${id}`,\n//         method: 'DELETE',\n//       }),\n//       invalidatesTags: ['Contacts'],\n//     }),\n//     // Фильтр по имени\n//     // getContactByName: builder.query({\n//     //   query: id => `/contacts/${id}`,\n//     // }),\n//   }),\n// });\n\n// export const {\n//   useGetAllContactsQuery,\n//   useCreateContactMutation,\n//   useDeleteContactMutation,\n//   useGetContactByNameQuery,\n// } = contactsApi;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { filteredReducer } from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authSlice } from './auth/auth-slice';\nimport { contactsSlice } from './contacts/contacts-slice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n  blacklist: ['filtered'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsSlice.reducer,\n    auth: persistReducer(authPersistConfig, authSlice.reducer),\n    filtered: filteredReducer,\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getUser = state => state.auth.user;\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const isLoading = state => state.auth.isLoading;\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\nexport const getUserName = state => state.auth.user.name;\nexport const getError = state => state.auth.error;\n","import * as authSelectors from '../../redux/auth/auth-selectors';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport default function PrivateRoute({ children, ...privateRouteProps }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...privateRouteProps}>\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\n    </Route>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport * as authSelectors from '../../redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\n\nexport default function PublicRoute({\n  restricted = false,\n  redirectTo,\n  children,\n  ...publicRouteProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...publicRouteProps}>\n      {shouldRedirect ? <Redirect exact to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const LinkContainer = styled.div`\n  display: flex;\n\n  @media (max-width: 550px) {\n    flex-direction: column;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { LinkContainer } from './Navigation.styled';\nimport * as authSelectors from '../../redux/auth/auth-selectors';\n// ----------------------------------- Icons\nimport { FaLock } from 'react-icons/fa';\n// ----------------------------------- MUI\nimport Button from '@mui/material/Button';\n\nexport const Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <LinkContainer>\n      <NavLink exact to=\"/\">\n        <Button size=\"small\" variant=\"outlined\" sx={{ mr: 1, mt: 1 }}>\n          Home\n        </Button>\n      </NavLink>\n\n      {isLoggedIn ? (\n        <NavLink exact to=\"/contacts\">\n          <Button size=\"small\" variant=\"outlined\" sx={{ mt: 1 }}>\n            Contacts\n          </Button>\n        </NavLink>\n      ) : (\n        <NavLink exact to=\"/contacts\">\n          <Button size=\"small\" sx={{ mt: 1 }}>\n            Contacts\n            <FaLock style={{ marginLeft: 5 }} />\n          </Button>\n        </NavLink>\n      )}\n    </LinkContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LinkContainer = styled.div`\n  display: flex;\n\n  @media (max-width: 550px) {\n    flex-direction: column;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport { LinkContainer } from './AuthNavigation.styled';\n// ----------------------------------- MUI\nimport Button from '@mui/material/Button';\n\nexport const AuthNavigation = () => {\n  return (\n    <LinkContainer>\n      <NavLink to=\"/login\">\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          sx={{ ml: 1, mt: 1, minWidth: 72 }}\n        >\n          Log in\n        </Button>\n      </NavLink>\n\n      <NavLink to=\"/signup\">\n        <Button size=\"small\" variant=\"outlined\" sx={{ ml: 1, mt: 1 }}>\n          Sign Up\n        </Button>\n      </NavLink>\n    </LinkContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  font-size: 16px;\n  @media (max-width: 550px) {\n    flex-direction: column;\n  }\n`;\nexport const Title = styled.h2`\n  display: block;\n  padding-top: 10px;\n  font-weight: 400;\n  /* @media (max-width: 550px) {\n    display: none;\n  } */\n`;\nexport const Accent = styled.span`\n  font-weight: 600;\n  font-size: 20px;\n`;\n","import * as authSelectors from '../../redux/auth/auth-selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as authOperations from '../../redux/auth/auth-operations';\nimport { Container, Title, Accent } from './UserMenu.styled';\n// ----------------------------------- MUI\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <CssBaseline>\n      <Container>\n        <Title>\n          Online: <Accent>{name}</Accent>\n        </Title>\n        <Button\n          sx={{ ml: 1, mt: 1 }}\n          size=\"small\"\n          variant=\"contained\"\n          type=\"button\"\n          onClick={() => dispatch(authOperations.logOut())}\n        >\n          Log out\n        </Button>\n      </Container>\n    </CssBaseline>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n\n  box-shadow: 1px 3px 10px -4px #050505;\n`;\n","import { useSelector } from 'react-redux';\nimport * as authSelectors from '../../redux/auth/auth-selectors';\nimport { Navigation } from '../Navigation/Navigation';\nimport { AuthNavigation } from '../AuthNavigation/AuthNavigation';\nimport { UserMenu } from '../UserMenu/UserMenu';\nimport { Header } from '../AppBar/AppBar.styled';\n// ----------------------------------- MUI\nimport CssBaseline from '@mui/material/CssBaseline';\nimport IconButton from '@mui/material/IconButton';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nexport const AppBar = ({ onClick, theme }) => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <CssBaseline>\n      <Box component={Paper}>\n        <Header>\n          <Navigation />\n          <IconButton onClick={onClick}>\n            {theme.palette.mode === 'dark' ? (\n              <Brightness7Icon />\n            ) : (\n              <Brightness4Icon />\n            )}\n          </IconButton>\n          {!isLoggedIn ? <AuthNavigation /> : <UserMenu />}\n        </Header>\n      </Box>\n    </CssBaseline>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  position: fixed;\n  top: 40%;\n  left: 47%;\n`;\n","import Loader from 'react-loader-spinner';\nimport { LoaderWrapper } from 'components/LoaderElement/LoaderElement.styled';\n\nconst LoaderElement = () => {\n  return (\n    <LoaderWrapper>\n      <Loader type=\"TailSpin\" color={'#1976d2'} height={46} width={46} />\n    </LoaderWrapper>\n  );\n};\n\nexport default LoaderElement;\n","import styled from '@emotion/styled';\n\nexport const MainWrapper = styled.div`\n  margin: 0 auto;\n  max-width: 1080px;\n`;\n","export default __webpack_public_path__ + \"static/media/bg-hd.eaf843ef.jpg\";","export default __webpack_public_path__ + \"static/media/bg-hd-dark.1cf98b30.jpg\";","import { useState, useEffect, useMemo, Suspense, lazy } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as authSelectors from '../../redux/auth/auth-selectors';\nimport * as authOperations from '../../redux/auth/auth-operations';\nimport PrivateRoute from 'components/PrivateRoute/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute/PublicRoute';\nimport { Switch } from 'react-router-dom';\nimport { AppBar } from '../AppBar/AppBar';\nimport { Toaster } from 'react-hot-toast';\nimport LoaderElement from '../LoaderElement/LoaderElement';\nimport { MainWrapper } from './App.styled';\nimport bgImage from '../../images/bg-hd.jpg';\nimport bgImageDark from '../../images/bg-hd-dark.jpg';\n// ----------------------------------- MUI\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// ----------------------------------- LazyLoad\nconst HomeView = lazy(() =>\n  import('../../views/HomeView/HomeView' /* webpackChunkName: \"home-view\" */),\n);\nconst ContactsView = lazy(() =>\n  import(\n    '../../views/ContactsView/ContactsView' /* webpackChunkName: \"contacts-view\" */\n  ),\n);\nconst SignUpView = lazy(() =>\n  import(\n    '../../views/SignUpView/SignUpView' /* webpackChunkName: \"signUp-view\" */\n  ),\n);\nconst LoginView = lazy(() =>\n  import(\n    '../../views/LoginView/LoginView' /* webpackChunkName: \"logIn-view\" */\n  ),\n);\n// -----------------------------------\n\nconst App = () => {\n  const [darkTheme, setDarkTheme] = useState(false);\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  //check current user\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  //create MUI dark theme\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: darkTheme ? 'dark' : 'light',\n          background: {\n            default: '#3b3939',\n            paper: darkTheme ? '#4c6362e0' : '#fff',\n          },\n          primary: {\n            main: darkTheme ? '#c3cafc' : '#478d95',\n          },\n          secondary: {\n            main: '#b0eef76f',\n          },\n        },\n      }),\n    [darkTheme],\n  );\n  //Theme toggle\n  const handleThemeChange = () => {\n    if (darkTheme) {\n      setDarkTheme(false);\n      document.body.style.backgroundImage = `url(${bgImage})`;\n      return;\n    }\n    setDarkTheme(true);\n    document.body.style.backgroundImage = `url(${bgImageDark})`;\n  };\n\n  return (\n    <MainWrapper>\n      {!isFetchingCurrentUser && (\n        <ThemeProvider theme={theme}>\n          <Toaster position=\"bottom-center\" />\n          <AppBar onClick={handleThemeChange} theme={theme} />\n\n          <Switch>\n            <Suspense\n              fallback={\n                <LoaderElement type=\"TailSpin\" height={26} width={26} />\n              }\n            >\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/signup\" restricted redirectTo={'/contacts'}>\n                <SignUpView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" restricted redirectTo={'/contacts'}>\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\">\n                <ContactsView />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n        </ThemeProvider>\n      )}\n    </MainWrapper>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n// console.log('STATE ---> ', store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-hot-toast';\nimport { FcLike } from 'react-icons/fc';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const signup = createAsyncThunk(\n  'auth/signup',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('users/signup', credentials);\n      token.set(data.token);\n      toast.success(`Enjoy Phonebook App, ${data.user.name}`);\n\n      return data;\n    } catch (error) {\n      toast.error(error.message);\n      return thunkAPI.rejectWithValue(error);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('users/login', credentials);\n      token.set(data.token);\n      toast.success(`Wellcome back, ${data.user.name}`);\n\n      return data;\n    } catch (error) {\n      toast.error(error.message);\n\n      return thunkAPI.rejectWithValue(error);\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk(\n  'auth/logout',\n  async (credentials, thunkAPI) => {\n    try {\n      await axios.post('users/logout', credentials);\n      token.unset();\n      toast.loading(`Have a nice day!`, { duration: 3000, icon: <FcLike /> });\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/fetchCurrentUser',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  },\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const getAllContacts = createAsyncThunk(\n  'contacts/get-contacts',\n  async credentials => {\n    try {\n      const { data } = await axios.get('/contacts', credentials);\n\n      return data;\n    } catch (error) {}\n  },\n);\n\nexport const createContact = createAsyncThunk(\n  'contacts/create-contact',\n  async credentials => {\n    try {\n      const { data } = await axios.post('/contacts', credentials);\n\n      return data;\n    } catch (error) {}\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/delete-contact',\n  async credentials => {\n    try {\n      const { data } = await axios.delete(\n        `/contacts/${credentials}`,\n        credentials,\n      );\n\n      return data;\n    } catch (error) {}\n  },\n);\n\nexport const updateContact = createAsyncThunk(\n  'contacts/update-contact',\n  async credentials => {\n    try {\n      await axios.patch(`/contacts/${credentials.id}`, credentials);\n    } catch (error) {}\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/filtered');\n"],"sourceRoot":""}