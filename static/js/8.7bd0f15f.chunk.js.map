{"version":3,"sources":["components/Contacts/Filter/Filter.styled.js","redux/contacts/contacts-selectors.js","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactsFormModal/ContactsFormModal.styled.js","components/Contacts/ContactsFormModal/ContactsFormModal.jsx","components/Contacts/ContactItem/ContactItem.styled.js","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactList/ContactList.styled.js","components/Contacts/ContactList/ContactList.jsx","views/ContactsView/ContactsView.styled.js","views/ContactsView/ContactsView.jsx"],"names":["Wrapper","styled","div","getFiltered","state","filtered","getAllContacts","contacts","allContacts","Filter","useSelector","dispatch","useDispatch","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","padding","Typography","variant","TextField","fullWidth","placeholder","label","type","value","onChange","e","changeFilter","currentTarget","size","Overlay","FormWrapper","ContactsFormModal","onClose","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleFormChange","useEffect","window","addEventListener","handleKeyDown","removeEventListener","formReset","code","onClick","target","noValidate","onSubmit","preventDefault","contactsOperations","mt","Grid","container","spacing","item","xs","required","autoFocus","autoComplete","id","Button","mb","p","ListItem","li","Name","Number","BtnDelete","button","ContactItem","style","paddingTop","marginRight","width","List","ul","ContactList","contactsSelectors","filteredContacts","filter","toLowerCase","includes","length","map","SubTitle","h2","ContactsView","showModal","setShowModal","CssBaseline","pt","pb","marginLeft"],"mappings":"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","file":"static/js/8.7bd0f15f.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  justify-content: center;\n  text-align: center;\n  /* padding: 20px 10px; */\n`;\n// export const Title = styled.h2`\n//   color: rgb(111, 121, 124);\n// `;\n// export const Input = styled.input`\n//   margin: 0 auto;\n//   display: block;\n//   padding: 5px 5px;\n\n//   border-color: teal;\n//   border-radius: 5px;\n\n//   &:focus,\n//   &:focus-visible,\n//   &:focus {\n//     display: block;\n//     padding: 5px 5px;\n\n//     border-color: red;\n//     outline-color: red;\n//   }\n// `;\n","export const getFiltered = state => state.filtered;\n// Code without RTK-----------------------------------\n// export const getFiltered = state => state.phonebook.filtered;\nexport const getAllContacts = state => state.contacts.allContacts;\nexport const isLoading = state => state.contacts.isLoading;\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltered } from 'redux/contacts/contacts-selectors';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\n//--------------------------\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport CssBaseline from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nconst Filter = () => {\n  const filtered = useSelector(getFiltered);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: 1,\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h5\">\n            Search by name\n          </Typography>\n\n          <TextField\n            fullWidth\n            placeholder=\"Mark Zuckerberg\"\n            label=\"Name\"\n            type=\"text\"\n            value={filtered}\n            onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n            size=\"small\"\n          />\n        </Box>\n      </Container>\n    </Wrapper>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const FormWrapper = styled.div`\n  /* width: 80%;\n  height: 90%; */\n  padding: 20px;\n  background-color: #abadad;\n  /* background-color: #ffffff3d; */\n  box-shadow: 1px 3px 10px -4px #050505;\n  /* overflow-y: scroll; */\n  display: flex;\n  /* flex-direction: column; */\n  align-items: center;\n  border-radius: 3px;\n`;\n","import { useEffect } from 'react';\nimport { Overlay, FormWrapper } from './ContactsFormModal.styled';\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FaPlus } from 'react-icons/fa';\n//--------------------------\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nconst ContactsFormModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleFormChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    // Вешаю слушателя\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      // Снимаю слуашателя\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    dispatch(contactsOperations.createContact({ name, number }));\n    dispatch(contactsOperations.getAllContacts());\n\n    formReset();\n    onClose();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  // Метод закрытия модального окна по кнопке Esc\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  // Метод закрытия модального окна по бекдропу\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <FormWrapper>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              // sx={{\n              //   color: 'black',\n              // }}\n            >\n              Add new contact\n            </Typography>\n\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleOnSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={4}>\n                <Grid\n                  item\n                  xs={12}\n                  // sm={6}\n                >\n                  <TextField\n                    required\n                    fullWidth\n                    autoFocus\n                    autoComplete=\"given-name\"\n                    placeholder=\"Mark Zuckerberg\"\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleFormChange}\n                    id={nameInputId}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    autoComplete=\"number\"\n                    placeholder=\"xxx-xx-xx\"\n                    label=\"Number\"\n                    type=\"number\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleFormChange}\n                    id={numberInputId}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2, p: 1.5 }}\n              >\n                <FaPlus />\n              </Button>\n            </Box>\n          </Box>\n        </Container>\n      </FormWrapper>\n    </Overlay>\n  );\n};\n\nexport default ContactsFormModal;\n\n// <Container component=\"main\">\n//   <CssBaseline />\n//   <Box\n//     component=\"form\"\n//     sx={{\n//       '& > :not(style)': { m: 1, width: '25ch' },\n//     }}\n//     onSubmit={handleOnSubmit}\n//   >\n//     <TextField\n//       label=\"Name\"\n//       variant=\"outlined\"\n//       type=\"text\"\n//       placeholder=\"Mark Zuckerberg\"\n//       name=\"name\"\n//       value={name}\n//       required\n//       onChange={handleFormChange}\n//       id={nameInputId}\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//     />\n//     <TextField\n//       label=\"Number\"\n//       variant=\"outlined\"\n//       type=\"number\"\n//       placeholder=\"xxx-xx-xx\"\n//       name=\"number\"\n//       value={number}\n//       required\n//       onChange={handleFormChange}\n//       id={numberInputId}\n//       pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//       title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//     />\n//     <Button variant=\"contained\" type=\"submit\" style={{ padding: 20 }}>\n//       <FaPlus />\n//     </Button>\n//   </Box>\n// </Container>;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  position: relative;\n  min-width: 160px;\n  width: 22%;\n  padding: 10px 10px;\n  margin: 7px;\n\n  color: rgb(111, 121, 124);\n  font-size: 14px;\n  line-height: 20px;\n  text-align: left;\n\n  background-color: #fff;\n  border: 1px solid #1976d2;\n  border-radius: 5px;\n  box-shadow: 1px 3px 10px -4px #050505;\n\n  transition: transform 0.25s linear, -webkit-transform 0.25s linear;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nexport const Name = styled.p`\n  font-weight: 400;\n`;\nexport const Number = styled.p`\n  font-weight: 600;\n`;\nexport const BtnDelete = styled.button`\n  padding: 5px;\n  font-size: 20px;\n  line-height: 10px;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  color: #1976d2;\n  border: 0;\n  outline: 0;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n// ----------------------------------- Icons\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { IoIosContact } from 'react-icons/io';\nimport { AiFillPhone } from 'react-icons/ai';\nimport { ListItem, Name, Number, BtnDelete } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  // const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const handleDeleteContact = () => {\n    dispatch(contactsOperations.deleteContact(id));\n    dispatch(contactsOperations.getAllContacts());\n    return;\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      <Name>\n        <IoIosContact style={{ paddingTop: '2', marginRight: '5' }} />\n        {name}:\n      </Name>\n      <Number>\n        <AiFillPhone style={{ paddingTop: '2', marginRight: '5' }} />\n        {number}\n      </Number>\n      <BtnDelete type=\"button\" onClick={handleDeleteContact}>\n        <FaTrashAlt style={{ width: '15' }} />\n      </BtnDelete>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteBtnPush: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 800px;\n`;\nexport const List = styled.ul`\n  padding: 20px 5px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  /* border: 1px solid #1976d2; */\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport * as contactsSelectors from 'redux/contacts/contacts-selectors';\n// import { useGetAllContactsQuery } from 'redux/contacts/contacts-slice';\nimport { Container, List } from './ContactList.styled';\n\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filtered = useSelector(contactsSelectors.getFiltered);\n  const contacts = useSelector(contactsSelectors.getAllContacts);\n\n  useEffect(() => {\n    dispatch(contactsOperations.getAllContacts());\n  }, [dispatch]);\n\n  // const { data } = useGetAllContactsQuery('');\n\n  const filteredContacts = contacts.filter(item =>\n    item.name.toLowerCase().includes(filtered.toLowerCase()),\n  );\n  // const filteredContacts = true;\n\n  return (\n    <Container>\n      {contacts.length === 0 && <p>Phonebook is empty</p>}\n      {contacts && filteredContacts && (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => {\n            return <ContactItem key={id} id={id} name={name} number={number} />;\n          })}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteBtnPush: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px 10px;\n  text-align: center;\n`;\nexport const SubTitle = styled.h2`\n  padding: 5px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  color: #1976d2;\n  font-size: 15px;\n  font-weight: 600;\n  line-height: 1.5;\n  font-style: italic;\n\n  display: flex;\n  align-items: center;\n`;\nexport const LoaderWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  position: fixed;\n  top: 40%;\n  left: 47%;\n`;\n","import Filter from '../../components/Contacts/Filter/Filter';\nimport ContactsFormModal from '../../components/Contacts/ContactsFormModal/';\nimport ContactList from '../../components/Contacts/ContactList/ContactList';\nimport { IoMdContacts } from 'react-icons/io';\nimport { Container, SubTitle } from './ContactsView.styled';\nimport { useState } from 'react';\n\n//-----------------------\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\n//---------------------------\n// import { useGetAllContactsQuery } from '../../redux/contacts/contacts-slice';\n\nconst ContactsView = () => {\n  // const { data, error, isFetching } = useGetAllContactsQuery('');\n  const [showModal, setShowModal] = useState(false);\n\n  const handleMmodalClose = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <CssBaseline>\n      {/* {error && <Title>{error.status} Not Found</Title>} */}\n\n      <Container>\n        {showModal && <ContactsFormModal onClose={handleMmodalClose} />}\n\n        <Button\n          onClick={() => setShowModal(true)}\n          variant=\"contained\"\n          sx={{ pt: 1, pb: 1 }}\n        >\n          Add new contact\n        </Button>\n        <Filter />\n\n        <SubTitle>\n          Contacts\n          <IoMdContacts style={{ marginLeft: '3' }} />\n        </SubTitle>\n        <ContactList />\n      </Container>\n    </CssBaseline>\n  );\n};\n\nexport default ContactsView;\n"],"sourceRoot":""}