{"version":3,"sources":["redux/contacts/contacts-selectors.js","components/Contacts/Filter/Filter.styled.js","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactsFormModal/ContactsFormModal.styled.js","components/Contacts/ContactsFormModal/ContactsFormModal.jsx","components/Contacts/ContactItem/ContactItem.styled.js","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactList/ContactList.styled.js","components/Contacts/ContactList/ContactList.jsx","views/ContactsView/ContactsView.jsx"],"names":["getFiltered","state","filtered","getAllContacts","contacts","allContacts","Wrapper","styled","div","Filter","useSelector","dispatch","useDispatch","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","padding","Typography","variant","TextField","fullWidth","placeholder","label","type","value","onChange","e","changeFilter","currentTarget","size","Overlay","ContactsFormModal","onClose","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleFormChange","useEffect","window","addEventListener","handleKeyDown","removeEventListener","formReset","code","onClick","target","Paper","p","mb","boxShadow","noValidate","onSubmit","preventDefault","contactsOperations","mt","Grid","container","spacing","item","xs","required","autoFocus","autoComplete","id","Button","style","marginRight","ListItem","li","Name","Number","BtnDelete","button","ContactItem","m","pt","pb","borderRadius","color","paddingTop","width","height","List","ul","ContactList","contactsSelectors","filteredContacts","filter","toLowerCase","includes","length","map","ContactsView","showModal","setShowModal","CssBaseline"],"mappings":"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","file":"static/js/contacts-view.b418df34.chunk.js","sourcesContent":["export const getFiltered = state => state.filtered;\nexport const getAllContacts = state => state.contacts.allContacts;\nexport const isLoading = state => state.contacts.isLoading;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  justify-content: center;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltered } from 'redux/contacts/contacts-selectors';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\nimport { Wrapper } from './Filter.styled';\n// ----------------------------------- MUI\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport CssBaseline from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nconst Filter = () => {\n  const filtered = useSelector(getFiltered);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: 1,\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h5\">\n            Search by name\n          </Typography>\n\n          <TextField\n            fullWidth\n            placeholder=\"Mark Zuckerberg\"\n            label=\"Name\"\n            type=\"text\"\n            value={filtered}\n            onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n            size=\"small\"\n          />\n        </Box>\n      </Container>\n    </Wrapper>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\n// export const FormWrapper = styled.div`\n//   /* width: 80%;\n//   height: 90%; */\n//   padding: 20px;\n//   background-color: #abadad;\n//   /* background-color: #ffffff3d; */\n//   box-shadow: 1px 3px 10px -4px #050505;\n//   /* overflow-y: scroll; */\n//   display: flex;\n//   /* flex-direction: column; */\n//   align-items: center;\n//   border-radius: 3px;\n// `;\n","import { useEffect } from 'react';\nimport {\n  Overlay,\n  // FormWrapper\n} from './ContactsFormModal.styled';\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FaPlus } from 'react-icons/fa';\n// ----------------------------------- MUI\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\n\nconst ContactsFormModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n  //getting form value to state\n  const handleFormChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    // Adding listener\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      // Removing listener\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    //Creating new contact\n    dispatch(contactsOperations.createContact({ name, number }));\n    //Updating contacts list with added new contact\n    dispatch(contactsOperations.getAllContacts());\n    //Reseting form\n    formReset();\n    //Closing modal\n    onClose();\n  };\n  //Reset form fn\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  // Close modal on Esc btn push\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  // Close modal on backdrop click\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      {/* <FormWrapper> */}\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          component={Paper}\n          sx={{\n            // marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            p: 3,\n            mb: 15,\n            boxShadow: '-1px 5px 18px -4px #050505',\n          }}\n        >\n          <Typography\n            component=\"h1\"\n            variant=\"h5\"\n            // sx={{\n            //   color: 'black',\n            // }}\n          >\n            Add new contact\n          </Typography>\n\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleOnSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={4}>\n              <Grid\n                item\n                xs={12}\n                // sm={6}\n              >\n                <TextField\n                  required\n                  fullWidth\n                  autoFocus\n                  autoComplete=\"given-name\"\n                  placeholder=\"Mark Zuckerberg\"\n                  label=\"Name\"\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  onChange={handleFormChange}\n                  id={nameInputId}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"number\"\n                  placeholder=\"xxx-xx-xx\"\n                  label=\"Number\"\n                  type=\"number\"\n                  name=\"number\"\n                  value={number}\n                  onChange={handleFormChange}\n                  id={numberInputId}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, p: 1.5 }}\n            >\n              <FaPlus style={{ marginRight: '7px' }} />\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n      {/* </FormWrapper> */}\n    </Overlay>\n  );\n};\n\nexport default ContactsFormModal;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  position: relative;\n  min-width: 180px;\n  width: 22%;\n  text-align: left;\n  transition: transform 0.25s linear, -webkit-transform 0.25s linear;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nexport const Name = styled.p`\n  /* font-weight: 400; */\n`;\nexport const Number = styled.p`\n  /* font-weight: 600; */\n`;\nexport const BtnDelete = styled.button`\n  padding: 5px;\n  font-size: 20px;\n  line-height: 10px;\n  position: absolute;\n  top: -7px;\n  right: -9px;\n  color: #e41f22;\n  border: 0;\n  outline: 0;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nimport { ListItem, Name, Number, BtnDelete } from './ContactItem.styled';\n// ----------------------------------- Icons\nimport { TiDelete } from 'react-icons/ti';\nimport { IoIosContact } from 'react-icons/io';\nimport { AiFillPhone } from 'react-icons/ai';\n// ----------------------------------- MUI\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = () => {\n    //contacts to delete id\n    dispatch(contactsOperations.deleteContact(id));\n    //get updated contacts\n    dispatch(contactsOperations.getAllContacts());\n    return;\n  };\n\n  return (\n    <ListItem>\n      <Box\n        component={Paper}\n        // variant=\"outlined\"\n        sx={{\n          m: 1,\n          p: 1,\n          boxShadow: '1px 3px 10px -4px #050505',\n          pt: 1,\n          pb: 1,\n          borderRadius: '4px',\n          color: '#478d95',\n        }}\n      >\n        <Name>\n          <IoIosContact style={{ paddingTop: '2', marginRight: '5' }} />\n          {name}:\n        </Name>\n\n        <Number>\n          <AiFillPhone style={{ paddingTop: '2', marginRight: '5' }} />\n          {number}\n        </Number>\n        <BtnDelete type=\"button\" onClick={handleDeleteContact}>\n          <TiDelete style={{ width: '25', height: '25' }} />\n        </BtnDelete>\n      </Box>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteBtnPush: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 800px;\n`;\nexport const List = styled.ul`\n  padding: 20px 5px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  /* border: 1px solid #1976d2; */\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsSelectors from 'redux/contacts/contacts-selectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { Container, List } from './ContactList.styled';\n// ----------------------------------- MUI\nimport Typography from '@mui/material/Typography';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filtered = useSelector(contactsSelectors.getFiltered);\n  const contacts = useSelector(contactsSelectors.getAllContacts);\n\n  useEffect(() => {\n    //get all contscts\n    dispatch(contactsOperations.getAllContacts());\n  }, [dispatch]);\n\n  //using filter on contacts list\n  const filteredContacts = contacts.filter(item =>\n    item.name.toLowerCase().includes(filtered.toLowerCase()),\n  );\n\n  return (\n    <Container>\n      {contacts.length === 0 && (\n        <Typography component=\"h4\" variant=\"h4\" sx={{ mt: 2, p: 1 }}>\n          Phonebook is empty yet\n        </Typography>\n      )}\n      {contacts && filteredContacts && (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => {\n            return <ContactItem key={id} id={id} name={name} number={number} />;\n          })}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteBtnPush: PropTypes.func,\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport Filter from '../../components/Contacts/Filter/Filter';\nimport ContactsFormModal from '../../components/Contacts/ContactsFormModal/';\nimport ContactList from '../../components/Contacts/ContactList/ContactList';\n// ----------------------------------- MUI\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nconst ContactsView = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleMmodalClose = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <CssBaseline>\n      {/* <Container> */}\n      <Box\n        component={Paper}\n        sx={{\n          marginTop: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          p: 3,\n          boxShadow: '-1px 5px 18px -4px #050505',\n        }}\n      >\n        {showModal && <ContactsFormModal onClose={handleMmodalClose} />}\n\n        <Button\n          onClick={() => setShowModal(true)}\n          variant=\"contained\"\n          sx={{ pt: 1, pb: 1 }}\n        >\n          Add new contact\n        </Button>\n        <Filter />\n        {/* \n        <SubTitle>\n          Contacts\n          <IoMdContacts style={{ marginLeft: '3' }} />\n        </SubTitle> */}\n        <ContactList />\n      </Box>\n      {/* </Container> */}\n    </CssBaseline>\n  );\n};\n\nexport default ContactsView;\n"],"sourceRoot":""}